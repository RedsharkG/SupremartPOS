<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>