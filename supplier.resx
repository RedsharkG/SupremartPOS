<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>