<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        xxv9Vx/F5a8AAAAASUVORK5CYII=
</value>
  </data>
</root>