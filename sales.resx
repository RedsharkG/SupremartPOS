<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Sales_Id.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Customer_Id.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Discounts.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>