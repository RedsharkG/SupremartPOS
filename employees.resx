<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>